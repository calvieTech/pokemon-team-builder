datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  username  String   @unique
  password  String
  teams     Team[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Team {
  id        String   @id @default(uuid())
  name      String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  pokemon   TeamPokemon[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model TeamPokemon {
  id        String   @id @default(uuid())
  team      Team     @relation(fields: [teamId], references: [id])
  teamId    String
  pokemonId Int
  nickname  String?
  level     Int      @default(1)
  moves     TeamPokemonMove[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Move {
  id        Int      @id
  name      String
  type      String
  power     Int?
  accuracy  Int?
  pp        Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  usedBy    TeamPokemonMove[]
}

model TeamPokemonMove {
  id           String      @id @default(uuid())
  teamPokemon  TeamPokemon @relation(fields: [teamPokemonId], references: [id])
  teamPokemonId String
  move         Move        @relation(fields: [moveId], references: [id])
  moveId       Int
  moveSlot     Int         @default(1) // 1 to 4, representing the move slot
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
}
